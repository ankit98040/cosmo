{"version":3,"sources":["images/portfolio.png","images/face-detector.png","images/edge-detector.png","components/Footer.jsx","components/Navbar.jsx","components/Header.jsx","components/home.jsx","components/Projects.jsx","components/Contacts.jsx","App.js","serviceWorker.js","index.js","images/motion.png","piyush.jpg"],"names":["module","exports","useStyles","makeStyles","root","minWidth","maxWidth","fill","fontSize","Footer","classes","BottomNavigation","width","style","background","Link","href","BottomNavigationAction","className","padding","icon","theme","menuSliderContainer","height","avatar","display","margin","spacing","listItem","color","menuItems","listIcon","listText","listPath","AssignmentInd","Apps","ContactMail","Navbar","slider","useState","right","state","setState","toggleSlider","open","Box","component","AppBar","position","Toolbar","IconButton","onClick","Typography","variant","anchor","onClose","Avatar","src","alt","Divider","List","map","lsItem","key","ListItem","button","to","ListItemIcon","ListItemText","primary","title","subtitle","marginBottom","typedContainer","top","left","transform","textAlign","zIndex","Header","Grid","container","justify","strings","typeSpeed","backSpeed","loop","particlesCanva","Home","canvasClassName","params","particles","number","value","density","enable","value_area","shape","type","stroke","size","radom","anim","speed","size_min","sync","opacity","random","opacity_min","mainContainer","cardContainer","Projects","mergeClasses","item","x5","sm","md","Card","CardActionArea","CardMedia","image","portfolio","CardContent","gutterBottom","CardActions","motionDetector","Button","faceDetector","edgeDetector","form","marginTop","borderColor","InputField","withStyles","TextField","Contacts","textTransform","fullWidth","label","inputProps","endIcon","App","CssBaseline","exact","path","Resume","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.388c7d8e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/portfolio.b2ff2899.png\";","module.exports = __webpack_public_path__ + \"static/media/face-detector.f0db4640.png\";","module.exports = __webpack_public_path__ + \"static/media/edge-detector.c6fdfc18.png\";","import React from 'react';\r\nimport {makeStyles} from \"@material-ui/styles\";\r\nimport {BottomNavigation, BottomNavigationAction} from '@material-ui/core';\r\nimport { Link } from '@material-ui/core';\r\nimport GitHub from '@material-ui/icons/GitHub';\r\nimport LinkedIn from '@material-ui/icons/LinkedIn';\r\nimport Twitter from '@material-ui/icons/Twitter';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        \"& .MuiBottomNavigationAction-root\": {\r\n            minWidth: 0,\r\n            maxWidth: 250,\r\n        },\r\n        \"& .MuiSvgIcon-root\": {\r\n            fill: \"tan\",\r\n            \"&:hover\": {\r\n                fill: \"tomato\",\r\n                fontSize: \"1.8rem\"\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\nconst Footer = () => {\r\n    const classes= useStyles()\r\n    return (\r\n        <BottomNavigation \r\n        width=\"auto\" \r\n        style={{\r\n            background: \"#222\"}}>\r\n                <Link href=\"https://github.com/piyush-cosmo\">\r\n                <BottomNavigationAction\r\n                className={classes.root}\r\n                style={{padding: 0}}\r\n                icon={<GitHub/>}\r\n                />\r\n                </Link>\r\n                <Link href=\"https://www.linkedin.com/in/piyush-thakur-004279184/\">\r\n                <BottomNavigationAction\r\n                className={classes.root}\r\n                style={{padding: 0}}\r\n                icon={<LinkedIn/>}\r\n                />\r\n                </Link>\r\n                <Link href=\"https://twitter.com/PiyushT04350603\">\r\n                <BottomNavigationAction\r\n                className={classes.root}\r\n                style={{padding: 0}}\r\n                icon={<Twitter/>}\r\n                />\r\n                </Link>\r\n        </BottomNavigation>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, {useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MobileRightMenySlider from '@material-ui/core/Drawer';\r\nimport Footer from \"./Footer\";\r\nimport { \r\n    AppBar,\r\n    Toolbar,\r\n    ListItem,\r\n    ListItemIcon,\r\n    IconButton,\r\n    ListItemText,\r\n    Avatar,\r\n    Divider,\r\n    List,\r\n    Typography,\r\n    Box\r\n } from '@material-ui/core';\r\n import { \r\n     ArrowBack,\r\n     AssignmentInd,\r\n     Home,\r\n     Apps,\r\n     ContactMail\r\n  } from '@material-ui/icons';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport avatar from '../piyush.jpg';\r\n\r\n//CSS STYLES\r\nconst useStyles = makeStyles(theme => ({\r\n    menuSliderContainer: {\r\n        width: 250,\r\n        background: \"#511\",\r\n        height: \"100%\"\r\n    },\r\n    avatar: {\r\n        display: \"block\",\r\n        margin:\"0.5rem auto\",\r\n        width:theme.spacing(13),\r\n        height:theme.spacing(13)\r\n    },\r\n    listItem: {\r\n        color: \"tan\"\r\n    }\r\n}));\r\n\r\nconst menuItems = [\r\n    {\r\n        listIcon: <Home/>,\r\n        listText: \"Home\",\r\n        listPath: \"/\"\r\n    },\r\n    {\r\n        listIcon: <AssignmentInd/>,\r\n        listText: \"Resume\",\r\n        listPath: \"/resume\"\r\n    },\r\n    {\r\n        listIcon: <Apps/>,\r\n        listText: \"projects\",\r\n        listPath: \"/projects\"\r\n    },\r\n    {\r\n        listIcon: <ContactMail/>,\r\n        listText: \"Contacts\",\r\n        listPath: \"/contacts\"\r\n    }\r\n]\r\n\r\nconst Navbar = () => {\r\n    const [state, setState] = useState({\r\n        right: false\r\n    });\r\n\r\n    const toggleSlider = (slider, open) => () => {\r\n        setState({...state, [slider]: open});\r\n    };\r\n        const classes = useStyles()\r\n\r\n        const sideList = slider => (\r\n            <Box \r\n            className={classes.menuSliderContainer} \r\n            component=\"div\"\r\n            onClick={toggleSlider(slider, false)}>\r\n                <Avatar className={classes.avatar} src={avatar} alt=\"no image\"/>\r\n                <Divider />\r\n                <List>\r\n                    {menuItems.map((lsItem, key) => (\r\n                        <ListItem button key={key} component={Link} to={lsItem.listPath}>\r\n                        <ListItemIcon className={classes.listItem}>\r\n                            {lsItem.listIcon}\r\n                        </ListItemIcon>\r\n                        <ListItemText className={classes.listItem} primary={ lsItem.listText } />\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n            </Box>\r\n        )\r\n        return (\r\n            <>\r\n            <Box component=\"nav\">\r\n                <AppBar position=\"static\" style={{background: \"#222\"}}>\r\n                    <Toolbar>\r\n                        <IconButton onClick={toggleSlider(\"right\", true)}>\r\n                          <MenuIcon style={{color: \"tomato\"}} />\r\n                        </IconButton>\r\n                        <Typography variant=\"h5\" style={{color:\"tan\"}}>\r\n                            cosmo\r\n                        </Typography>\r\n                        <MobileRightMenySlider \r\n                        anchor=\"right\" \r\n                        open={state.right}\r\n                        onClose={toggleSlider(\"right\", false)}>\r\n                            {sideList(\"right\")}\r\n                            <Footer/>\r\n                        </MobileRightMenySlider>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </Box>\r\n            </>\r\n    );\r\n  }\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport { \r\n    Typography,\r\n    Avatar,\r\n    Grid,\r\n    Box\r\n } from '@material-ui/core';\r\n import Typed from \"react-typed\";\r\nimport avatar from \"../piyush.jpg\";\r\n\r\n//Css \r\nconst useStyles = makeStyles(theme => ({\r\n    avatar: {\r\n        width: theme.spacing(15),\r\n        height: theme.spacing(15),\r\n        margin: theme.spacing(1)\r\n    },\r\n    title: {\r\n        color: \"tomato\"\r\n    },\r\n    subtitle: {\r\n        color: \"tan\",\r\n        marginBottom: \"3rem\"\r\n    },\r\n    typedContainer: {\r\n        position: \"absolute\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        textAlign: \"center\",\r\n        zIndex: 1\r\n    }\r\n}))\r\n\r\nconst Header = () => {\r\n    const classes = useStyles()\r\n    return (\r\n        <Box className={classes.typedContainer}>\r\n            <Grid container justify=\"center\">\r\n               <Avatar className={classes.avatar} src={avatar} alt=\"no image\"/>\r\n            </Grid>\r\n            <Typography className={classes.title} variant=\"h4\">\r\n                <Typed strings={[\"PIYUSH THAKUR\"]} typeSpeed={40} />\r\n            </Typography>\r\n            <br/>\r\n            <Typography className={classes.subtitle} variant=\"h5\">\r\n            <Typed strings={[\"Robotics\",\"Arduino\",\"Web Development\",\"MERN Stack\",\"Machine Learning\"]} \r\n            typeSpeed={40}\r\n            backSpeed={60}\r\n            loop />\r\n        </Typography>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport Navbar from './Navbar';\r\nimport Header from \"./Header\";\r\nimport Particles from \"react-particles-js\";\r\nimport {makeStyles} from \"@material-ui/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n    particlesCanva: {\r\n        position: \"absolute\"\r\n    }\r\n})\r\n\r\nconst Home = () => {\r\n    const classes = useStyles()\r\n        return (\r\n            <>\r\n                <Navbar/>\r\n                <Header />\r\n                <Particles \r\n                canvasClassName={classes.particlesCanva}\r\n                params={{\r\n                    particles:{\r\n                        number:{\r\n                            value: 45,\r\n                            density: {\r\n                                enable: false,\r\n                                value_area: 900\r\n                            }\r\n                        },\r\n                        shape: {\r\n                            type: \"circle\",\r\n                            stroke: {\r\n                                width: 1,\r\n                                color: \"tomato\"\r\n                            }\r\n                        },\r\n                        size: {\r\n                            value: 8,\r\n                            radom: true,\r\n                            anim: {\r\n                                enable: true,\r\n                                speed: 6,\r\n                                size_min: 0.1,\r\n                                sync: true\r\n                            }\r\n                        },\r\n                        opacity: {\r\n                            value: 1,\r\n                            random: true,\r\n                            anim: {\r\n                                enable: true,\r\n                                speed: 1,\r\n                                opacity_min: 0.1,\r\n                                sync: true\r\n                            }\r\n                        }\r\n                    }\r\n                }}/>\r\n            </>\r\n        );\r\n    }\r\n\r\nexport default Home; ","import React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\"\r\nimport {Link} from \"@material-ui/core\";\r\nimport {\r\n    Box,\r\n    Grid,\r\n    Card,\r\n    CardActionArea,\r\n    CardActions,\r\n    CardContent,\r\n    CardMedia,\r\n    Button,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport {mergeClasses} from '@material-ui/styles';\r\nimport Navbar from \"./Navbar\";\r\n\r\nimport portfolio from \"../images/portfolio.png\";\r\nimport motionDetector from \"../images/motion.png\";\r\nimport faceDetector from \"../images/face-detector.png\";\r\nimport edgeDetector from \"../images/edge-detector.png\"\r\n\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\r\n\r\nconst useStyles = makeStyles({\r\n    mainContainer: {\r\n        background: \"#233\",\r\n        height: \"100%\"\r\n    },\r\n    cardContainer: {\r\n        maxWidth: 345,\r\n        margin: \"5rem auto\"\r\n    }\r\n})\r\n\r\nconst Projects = () => {\r\n    const classes = useStyles()\r\n    return (\r\n        <Box component=\"div\" className={mergeClasses.mainContainer}>\r\n            <Navbar />\r\n            <Grid container justify=\"center\">\r\n                {/*portfolio*/}\r\n                <Grid item x5={12} sm={8} md={6}>\r\n                <Card className={classes.cardContainer}>\r\n                    <CardActionArea>\r\n                        <CardMedia\r\n                            component=\"img\"\r\n                            alt=\"portfolio\"\r\n                            height=\"140\"\r\n                            image={portfolio} />\r\n                            <CardContent>\r\n                                <Typography gutterBottom variant=\"h5\">\r\n                                    Portfolio\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                    This is my portfolio where my skills are illustrated.\r\n                                </Typography>\r\n                            </CardContent>\r\n                            </CardActionArea>\r\n                            <CardActions>\r\n                                <GitHubIcon />\r\n                                <Link href=\"https://github.com/piyush-cosmo/cosmo\">\r\n                                    Github\r\n                                </Link>\r\n                                <PlayCircleFilledIcon />\r\n                                <Link href=\"https://github.com/piyush-cosmo/cosmo\">\r\n                                    Live\r\n                                </Link>\r\n                            </CardActions>\r\n                </Card>\r\n                </Grid>\r\n                {/*motion-detector*/}\r\n                <Grid item x5={12} sm={8} md={6}>\r\n                <Card className={classes.cardContainer}>\r\n                    <CardActionArea>\r\n                        <CardMedia\r\n                            component=\"img\"\r\n                            alt=\"motion-detector\"\r\n                            height=\"140\"\r\n                            image={motionDetector} />\r\n                            <CardContent>\r\n                                <Typography gutterBottom variant=\"h5\">\r\n                                    Motion_Detector_openCV\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                    This project of detecting motion is done with openCV. \r\n                                </Typography>\r\n                            </CardContent>\r\n                            </CardActionArea>\r\n                            <CardActions>\r\n                            <GitHubIcon />\r\n                                <Link href=\"https://github.com/piyush-cosmo/motion_detector_using_openCV\">\r\n                                    Github\r\n                                </Link>\r\n                                <Button size=\"small\" color=\"primary\">\r\n                                    Livedemo\r\n                                </Button>\r\n                            </CardActions>\r\n                </Card>\r\n                </Grid>\r\n                {/*face-detector*/}\r\n                <Grid item x5={12} sm={8} md={6}>\r\n                <Card className={classes.cardContainer}>\r\n                    <CardActionArea>\r\n                        <CardMedia\r\n                            component=\"img\"\r\n                            alt=\"face-detector\"\r\n                            height=\"140\"\r\n                            image={faceDetector} />\r\n                            <CardContent>\r\n                                <Typography gutterBottom variant=\"h5\">\r\n                                    Face_Detector_openCV\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                    This project of detecting face is done with openCV and pretrained HaarCascade model. \r\n                                </Typography>\r\n                            </CardContent>\r\n                            </CardActionArea>\r\n                            <CardActions>\r\n                            <GitHubIcon />\r\n                                <Link href=\"https://github.com/piyush-cosmo/face_recognition_opencv_cascade\">\r\n                                    Github\r\n                                </Link>\r\n                                <Button size=\"small\" color=\"primary\">\r\n                                    Livedemo\r\n                                </Button>\r\n                            </CardActions>\r\n                </Card>\r\n                </Grid>\r\n                {/*edge-detector*/}\r\n                <Grid item x5={12} sm={8} md={6}>\r\n                <Card className={classes.cardContainer}>\r\n                    <CardActionArea>\r\n                        <CardMedia\r\n                            component=\"img\"\r\n                            alt=\"edge-detector\"\r\n                            height=\"140\"\r\n                            image={edgeDetector} />\r\n                            <CardContent>\r\n                                <Typography gutterBottom variant=\"h5\">\r\n                                    Edge_Detector_openCV\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                    This project of detecting edges is done with openCV and Canny edge function.\r\n                                </Typography>\r\n                            </CardContent>\r\n                            </CardActionArea>\r\n                            <CardActions>\r\n                            <GitHubIcon />\r\n                                <Link href=\"https://github.com/piyush-cosmo/canny_edge_detection_openCV\">\r\n                                    Github\r\n                                </Link>\r\n                                <Button size=\"small\" color=\"primary\">\r\n                                    Livedemo\r\n                                </Button>\r\n                            </CardActions>\r\n                </Card>\r\n                </Grid>\r\n                {/*hanwritten-digit-recogniser-app*/}\r\n                <Grid item x5={12} sm={8} md={6}>\r\n                <Card className={classes.cardContainer}>\r\n                    <CardActionArea>\r\n                        <CardMedia\r\n                            component=\"img\"\r\n                            alt=\"motion-detector\"\r\n                            height=\"140\"\r\n                            image={motionDetector} />\r\n                            <CardContent>\r\n                                <Typography gutterBottom variant=\"h5\">\r\n                                    Motion_Detector_openCV\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                    This project of detecting motion is done with openCV. \r\n                                </Typography>\r\n                            </CardContent>\r\n                            </CardActionArea>\r\n                            <CardActions>\r\n                            <GitHubIcon />\r\n                                <Link href=\"https://github.com/piyush-cosmo/motion_detector_using_openCV\">\r\n                                    Github\r\n                                </Link>\r\n                                <Button size=\"small\" color=\"primary\">\r\n                                    Livedemo\r\n                                </Button>\r\n                            </CardActions>\r\n                </Card>\r\n                </Grid>\r\n                {/*line follower*/}\r\n                <Grid item x5={12} sm={8} md={6}>\r\n                <Card className={classes.cardContainer}>\r\n                    <CardActionArea>\r\n                        <CardMedia\r\n                            component=\"img\"\r\n                            alt=\"motion-detector\"\r\n                            height=\"140\"\r\n                            image={motionDetector} />\r\n                            <CardContent>\r\n                                <Typography gutterBottom variant=\"h5\">\r\n                                    Motion_Detector_openCV\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                    This project of detecting motion is done with openCV. \r\n                                </Typography>\r\n                            </CardContent>\r\n                            </CardActionArea>\r\n                            <CardActions>\r\n                            <GitHubIcon />\r\n                                <Link href=\"https://github.com/piyush-cosmo/motion_detector_using_openCV\">\r\n                                    Github\r\n                                </Link>\r\n                                <Button size=\"small\" color=\"primary\">\r\n                                    Livedemo\r\n                                </Button>\r\n                            </CardActions>\r\n                </Card>\r\n                </Grid>\r\n                {/*tetris*/}\r\n                <Grid item x5={12} sm={8} md={6}>\r\n                <Card className={classes.cardContainer}>\r\n                    <CardActionArea>\r\n                        <CardMedia\r\n                            component=\"img\"\r\n                            alt=\"motion-detector\"\r\n                            height=\"140\"\r\n                            image={motionDetector} />\r\n                            <CardContent>\r\n                                <Typography gutterBottom variant=\"h5\">\r\n                                    Motion_Detector_openCV\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                    This project of detecting motion is done with openCV. \r\n                                </Typography>\r\n                            </CardContent>\r\n                            </CardActionArea>\r\n                            <CardActions>\r\n                            <GitHubIcon />\r\n                                <Link href=\"https://github.com/piyush-cosmo/motion_detector_using_openCV\">\r\n                                    Github\r\n                                </Link>\r\n                                <Button size=\"small\" color=\"primary\">\r\n                                    Livedemo\r\n                                </Button>\r\n                            </CardActions>\r\n                </Card>\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Projects;","import React, { useState } from 'react';\r\nimport {makeStyles, withStyles} from \"@material-ui/core/styles\";\r\nimport {\r\n    TextField,\r\n    Typography,\r\n    Button,\r\n    Grid,\r\n    Box\r\n} from \"@material-ui/core\";\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport Navbar from \"./Navbar\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    form: {\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        transform: \"transform(-50%, -50%)\",\r\n        position: \"absolute\"\r\n    },\r\n    button: {\r\n        marginTop: \"1rem\",\r\n        color: \"tomato\",\r\n        borderColor: \"tomato\"\r\n    }\r\n}))\r\n\r\nconst InputField = withStyles({\r\n    root: {\r\n        \"& label.Mui-focused\": {\r\n            color: \"tomato\",\r\n        },\r\n        \"& label\": {\r\n            color: \"tan\"\r\n        },\r\n        \"& .MuiOutlinedInput-root\": {\r\n            \"& fieldset\": {\r\n                borderColor: \"tan\"\r\n            },\r\n            \"&:hover fieldset\": {\r\n                borderColor: \"tan\"\r\n            },\r\n            \"& .Mui-focused fieldset\": {\r\n                borderColor: \"tan\",\r\n            }\r\n        }\r\n    },\r\n})(TextField);\r\n\r\nconst Contacts = () => {\r\n    const classes=useStyles()\r\n    return (\r\n        <Box component=\"div\">\r\n            <Navbar/>\r\n            <Grid container justify=\"center\">\r\n                <Box component=\"form\" className={classes.form}>\r\n                    <Typography \r\n                    variant=\"h5\" \r\n                    style={{\r\n                        color: \"tomato\", \r\n                        textAlign: \"center\",\r\n                        textTransform: \"uppercase\"\r\n                        }}>\r\n                        Contact Me\r\n                    </Typography>\r\n                    <InputField \r\n                    fullWidth={true} \r\n                    label=\"Name\" \r\n                    variant=\"outlined\"\r\n                    inputProps={{style:{color:\"white\"}}} \r\n                    margin=\"dense\" \r\n                    size=\"medium\"/>\r\n                    <br/>\r\n                    <InputField \r\n                    fullWidth={true} \r\n                    label=\"Email\" \r\n                    variant=\"outlined\"\r\n                    inputProps={{style:{color:\"white\"}}}  \r\n                    margin=\"dense\" \r\n                    size=\"medium\"/>\r\n                    <br/>\r\n                    <InputField \r\n                    fullWidth={true} \r\n                    label=\"Number\" \r\n                    variant=\"outlined\"\r\n                    inputProps={{style:{color:\"white\"}}}  \r\n                    margin=\"dense\" \r\n                    size=\"medium\"/>\r\n                    <br/>\r\n                    <Button className={classes.button} variant=\"outlined\" fullWidth={true} endIcon={<SendIcon/>}>\r\n                        Contact Me\r\n                    </Button>         \r\n                </Box>\r\n            </Grid>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Contacts;","import React from 'react';\nimport {Route} from 'react-router-dom';\nimport \"./App.css\";\nimport Home from './components/home';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Resume from \"./components/Resume\";\nimport Projects from \"./components/Projects\";\nimport Contacts from \"./components/Contacts\";\n\nfunction App() {\n  return (\n    <>\n      <CssBaseline />\n      <Route exact path=\"/\" component={Home}/>\n      <Route path=\"/resume\" component={Resume}/>\n      <Route path=\"/projects\" component={Projects}/>\n      <Route path=\"/contacts\" component={Contacts}/>\n    </>\n  );\n}\n\nexport default App;\n    \n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter as Router} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/motion.cc66ad7e.png\";","module.exports = __webpack_public_path__ + \"static/media/piyush.8da0aa5d.jpg\";"],"sourceRoot":""}